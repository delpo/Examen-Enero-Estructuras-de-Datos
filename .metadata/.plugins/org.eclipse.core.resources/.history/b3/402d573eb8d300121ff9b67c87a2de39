package ej4;

import java.util.Collection;
import java.util.HashMap;
import java.util.Map.Entry;
import java.util.TreeSet;

import ej3.DoubleLinkedList;

public class EleccionesGenerales {
	
	public class VotosDePartido{
		private String partido;
		private int votos;
		
		public VotosDePartido(){}
		
		public VotosDePartido(String partido, int votos){
			this.partido = partido;
			this.votos = votos;
		}
		
		public String getPartido(){
			return partido;
		}
		
		public int getVotos(){
			return votos;
		}
		
		public void setPartido(String partido){
			this.partido = partido;
		}
		
		public void setVotos(int votos){
			this.votos = votos;
		}
	}
	
	private HashMap<String, TreeSet<VotosDePartido>> datos;
	
	public EleccionesGenerales(){
		datos  = new HashMap<String, TreeSet<VotosDePartido>>();
	}
	
	public void IncluirProvincia(String provincia){
		TreeSet<VotosDePartido> votos = new TreeSet<VotosDePartido>();
		votos.add(new VotosDePartido(provincia, 0));
		if(!datos.containsKey(provincia))
			datos.put(provincia, votos);
	}
	
	public void VotosPartido(String provincia, String partido, int votos){
		for (Entry<String, Integer> entry : datos.get(provincia).entrySet()) {
			
		}
		datos.get(provincia).
	}
	
	public void MostrarVotosProvincia(String provincia){
		for (Entry<String, Integer> entry : datos.get(provincia).entrySet()) {
			System.out.println("Partido : " + entry.getKey() + " Votos : "
				+ entry.getValue());
		}
	}
	
	public int VotosTotal(String partido){
		int votos = 0;
		for (Entry<String, HashMap<String, Integer>> entry : datos.entrySet()) {
			if(entry.getValue().containsKey(partido)){
				votos += entry.getValue().get(partido);
			}
		}
		return votos;
	}
	
	public Collection<Integer> TodosTotales(){
		Collection<Integer> coleccion = new DoubleLinkedList<Integer>();
		HashMap<String, Integer> partidos = new HashMap<String, Integer>();
		//obtengo todos los partidos
		for (Entry<String, HashMap<String, Integer>> entry : datos.entrySet()) {
			for(Entry<String, Integer> entry2 : entry.getValue().entrySet()){
				if(!partidos.containsKey(entry2.getKey())){
					partidos.put(entry2.getKey(), 0);
				}
			}
		}
		for (Entry<String, Integer> entry : partidos.entrySet()) { //para cada partido
			for (Entry<String, HashMap<String, Integer>> entry2 : datos.entrySet()) { //miro cada provincia
				if(entry2.getValue().containsKey(entry.getKey())){
					int valor = entry.getValue() + entry2.getValue().get(entry.getKey());
					entry.setValue(valor);
				}
			}
		}
		for (Entry<String, Integer> entry : partidos.entrySet()) {
			coleccion.add(entry.getValue());
		}
		return coleccion;
		
	}
	public Collection<String> TodosPartidos(){
		Collection<String> coleccion = new DoubleLinkedList<String>();
		HashMap<String, Integer> partidos = new HashMap<String, Integer>();
		//obtengo todos los partidos
		for (Entry<String, HashMap<String, Integer>> entry : datos.entrySet()) {
			for(Entry<String, Integer> entry2 : entry.getValue().entrySet()){
				if(!partidos.containsKey(entry2.getKey())){
					System.out.println(entry2.getKey());
					partidos.put(entry2.getKey(), 0);
				}
			}
		}
		for (String entry : partidos.keySet()) {
			coleccion.add(entry);
		}
		return coleccion;
		
	}
}
